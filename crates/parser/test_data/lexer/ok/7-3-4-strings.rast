COMMENT "% LITERAL STRINGS %"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "% EXAMPLE 1: The following are valid literal strings:"
NEWLINE "\n"
NEWLINE "\n"
LITERAL_STRING "(This is a string)"
WHITESPACE " "
NEWLINE "\n"
LITERAL_STRING "(Strings can contain newlines \nand such.)"
WHITESPACE " "
NEWLINE "\n"
LITERAL_STRING "(Strings can contain balanced parentheses () \nand special characters ( * ! & } ^ %and so on) .)"
WHITESPACE " "
NEWLINE "\n"
LITERAL_STRING "(The following is an empty string .)"
WHITESPACE " "
NEWLINE "\n"
LITERAL_STRING "()"
WHITESPACE " "
NEWLINE "\n"
LITERAL_STRING "(It has zero (0) length.)"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "% EXAMPLE 2: Reverse solidus and end-of-line marker following it"
NEWLINE "\n"
NEWLINE "\n"
LITERAL_STRING "(These \\ \ntwo strings \\ \nare the same.)"
WHITESPACE " "
NEWLINE "\n"
LITERAL_STRING "(These two strings are the same.)"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "% EXAMPLE 3: An end-of-line marker without a preceding reverse solidus"
NEWLINE "\n"
NEWLINE "\n"
LITERAL_STRING "(This string has an end-of-line at the end of it. \n)"
WHITESPACE " "
NEWLINE "\n"
LITERAL_STRING "(So does this one.\\n)"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "% EXAMPLE 4: Escape sequence to represent characters outside the printable ASCII character set."
NEWLINE "\n"
NEWLINE "\n"
LITERAL_STRING "(This string contains \\245two octal characters\\307.)"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "% HECADECIMAL STRINGS %"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "% EXAMPLE 1"
NEWLINE "\n"
HEX_STRING "<4E6F762073686D6F7A206B6120706F702E>"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "% EXAMPLE 2"
NEWLINE "\n"
HEX_STRING "<901FA3>"
NEWLINE "\n"
HEX_STRING "<901FA>"
