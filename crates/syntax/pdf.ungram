// PDF Un-Grammar.
//
// This grammar specifies the structure of PDF's concrete syntax tree.
// It does not specify parsing rules (ambiguities, precedence, etc are out of scope).
// Tokens are processed -- contextual keywords are recognised, compound operators glued.
//
// Legend:
//
//   //          -- comment
//   Name =      -- non-terminal definition
//   'ident'     -- keyword or punct token (terminal)
//   '#ident'    -- generic token (terminal)
//   '@ident'    -- literal token (terminal)
//   A B         -- sequence
//   A | B       -- alternation
//   A*          -- zero or more repetition
//   A?          -- zero or one repetition
//   (A)         -- same as A
//   label:A     -- suggested name for field of AST node

//*************************//
//     PDF Document        //
//*************************//

PdfDocument =
  Header Body Trailer

Header =
  '#pdf_marker' version:PdfVersion

PdfVersion =
  Real

Body =
  Object*

Trailer =
  'trailer' Dictionary
  'startxref' Integer
  '#eof_marker'

//*************************//
//        Objects          //
//*************************//

Object =
  ObjectID
  ObjectData
  'endobj'

ObjectID =
  object_number:Integer generation_number:Integer 'obj'

IndirectReference =
  object_number:Integer generation_number:Integer 'R'

DirectObject =
  LiteralString
  | HexString
  | Name
  | Integer
  | Real
  | Boolean
  | Null
  | Dictionary
  | Array

ObjectData =
  LiteralString
  | HexString
  | Name
  | Integer
  | Real
  | Boolean
  | Null
  | Dictionary
  | Array
  | Stream

//*************************//
//     Data Structures     //
//*************************//

LiteralString =
  '@literal_string'

HexString =
  '@hex_string'

Name =
  '/' '@ident'

Integer =
  '@int_number'

Real =
  '@real_number'

Boolean =
  'true' | 'false'

Null =
  'null'

Dictionary =
  '<<' DictEntry* '>>'

DictEntry =
  Key Value

Key =
  Name

Value =
  DirectObject

Array =
  '[' (DirectObject (DirectObject)*)? ']'

Stream =
  Dictionary 'stream' '@raw_bytes' 'endstream'

//*************************//
//     Content Streams     //
//*************************//

//ContentStream =
//  Operator*
//
//Operator =
//  Name Operand*
//
//Operand =
//  DirectObject

//*************************//
//       Cross-Ref         //
//*************************//

CrossRefTable =
  CrossRefSection*

CrossRefSection =
  'xref'
  CrossRefSubSection*

CrossRefSubSection =
  object_start:Integer
  object_count:Integer
  CrossRefEntry*

CrossRefEntry =
  offset:Integer
  generation_number:Integer ('n' | 'f')