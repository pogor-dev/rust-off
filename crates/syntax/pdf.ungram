// PDF Un-Grammar.
//
// This grammar specifies the structure of PDF's concrete syntax tree.
// It does not specify parsing rules (ambiguities, precedence, etc are out of scope).
// Tokens are processed -- contextual keywords are recognised, compound operators glued.
//
// Legend:
//
//   //          -- comment
//   Name =      -- non-terminal definition
//   'ident'     -- keyword or punct token (terminal)
//   '#ident'    -- generic token (terminal)
//   '@ident'    -- literal token (terminal)
//   A B         -- sequence
//   A | B       -- alternation
//   A*          -- zero or more repetition
//   A?          -- zero or one repetition
//   (A)         -- same as A
//   label:A     -- suggested name for field of AST node

Expr = Literal
  | ArrayExpr
  | DictionaryExpr
  | IndirectObjectExpr
  | IndirectReferenceExpr

ArrayExpr =
  '['
  Expr*
  ']'

DictionaryItemExpr =
  DictionaryItemKeyExpr
  DictionaryItemValueExpr

DictionaryItemKeyExpr =
  Literal

DictionaryItemValueExpr =
  Expr

DictionaryExpr =
  '<<'
  DictionaryItemExpr*
  '>>'

Literal =
  value:(
    '@int_number' | '@real_number'
  | '@literal_string' | '@hex_string'
  | '@name' | 'null'
  | 'true' | 'false'
  )

//*************************//
//        Objects          //
//*************************//

IndirectObjectExpr =
  IndirectObjectId
  data:Expr
  'endobj'

IndirectObjectId =
 object_number:Literal generation_number:Literal 'obj'

IndirectReferenceExpr =
  object_number:Literal generation_number:Literal 'R'

//*************************//
//          Items          //
//*************************//

PdfDocument =
  Body
  Trailer

Body =
  IndirectObjectExpr*

Trailer =
  'trailer' DictionaryExpr
  'startxref' Literal

//*************************//
//         Streams         //
//*************************//

StreamExpr =
  DictionaryExpr
  'stream'
  '#stream_data' // Raw binary or ASCII data
  'endstream'

//*************************//
//        Cross-Ref        //
//*************************//

XRefTable =
  XRefSection*

XRefSection =
  'xref'
  XRefSubsection*

XRefSubsection =
  first_object:Literal count:Literal
  XRefEntry*

XRefEntry =
  offset:Literal generation_number:Literal free_or_used:XRefEntryType

XRefEntryType = 'f' | 'n'
