Comment "%PDF-1.7"
Eol "\r\n"
Comment "%\\u{e2}\\u{e3}\\u{cf}\\u{d3}"
Eol "\r\n"
Comment "%"
Eol "\r\n"
Comment "% (c) PDF Association, 2020"
Eol "\r\n"
Comment "% Peter Wyatt, Principal Scientist - for SafeDocs"
Eol "\r\n"
Comment "%"
Eol "\r\n"
Comment "% This PDF has been hand-written to cover as many combinations of compacted PDF syntax as possible"
Eol "\r\n"
Comment "% (meaning not using whitespace between tokens and delimiters). This file will get RUINED if it gets"
Eol "\r\n"
Comment "% \"repaired\" by tools such as mutool clean!!!!"
Eol "\r\n"
Comment "%"
Eol "\r\n"
Comment "% Note also that this PDF file is NOT checked by rendering as many constructs are"
Eol "\r\n"
Comment "% necessarily artificial and will not relate to graphics. It is designed to check a parser's ability to "
Eol "\r\n"
Comment "% read compacted syntax without error, such as with the Trail Of Bit's PolyTracker/PolyFile tools. "
Eol "\r\n"
Comment "% However this is still a 100% valid PDF and should render in every viewer."
Eol "\r\n"
Comment "%"
Eol "\r\n"
Comment "% See also the corresponding \"Compacted PDF Syntax Matrix\" document for the 121 possible combinations."
Eol "\r\n"
Comment "%"
Eol "\r\n"
Comment "% This material is based upon work supported by the Defense Advanced"
Eol "\r\n"
Comment "% Research Projects Agency (DARPA) under Contract No. HR001119C0079."
Eol "\r\n"
Comment "% Any opinions, findings and conclusions or recommendations expressed"
Eol "\r\n"
Comment "% in this material are those of the author(s) and do not necessarily"
Eol "\r\n"
Comment "% reflect the views of the Defense Advanced Research Projects Agency"
Eol "\r\n"
Comment "% (DARPA). Approved for public release."
Eol "\r\n"
Comment "%"
Eol "\r\n"
Literal { kind: Int } "1"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "obj"
Eol "\r\n"
OpenDict "<<"
Literal { kind: Name } "/Type"
Literal { kind: Name } "/Catalog"
Literal { kind: Name } "/MarkInfo"
OpenDict "<<"
Comment "%comment after dictionary start token"
Eol "\r\n"
Literal { kind: Name } "/Marked"
Whitespace " "
Ident "true"
Literal { kind: Name } "/Suspects"
Whitespace " "
Ident "true"
Comment "%comment after a boolean"
Eol "\r\n"
Literal { kind: Name } "/UserProperties"
Whitespace " "
Ident "true"
CloseDict ">>"
Literal { kind: Name } "/StructTreeRoot"
Whitespace " "
Ident "null"
Literal { kind: Name } "/AA"
OpenDict "<<"
Literal { kind: Name } "/WP"
OpenDict "<<"
Literal { kind: Name } "/S"
Literal { kind: Name } "/JavaScript"
Literal { kind: Name } "/JS"
Literal { kind: LiteralString } "(//JavaScript comment\r\napp.alert\\( \"Document Will Print Action!!\"\\))"
CloseDict ">>"
CloseDict ">>"
Literal { kind: Name } "/Pages"
Whitespace " "
Literal { kind: Int } "3"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
CloseDict ">>"
Comment "%comment after dictionary close token"
Eol "\r\n"
Ident "endobj"
Eol "\r\n"
Literal { kind: Int } "2"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "obj"
Eol "\r\n"
Ident "endobj"
Eol "\r\n"
Literal { kind: Int } "3"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "obj"
Eol "\r\n"
OpenDict "<<"
Literal { kind: Name } "/FakeBigDataArray"
OpenBracket "["
Ident "true"
OpenBracket "["
OpenBracket "["
OpenBracket "["
CloseBracket "]"
CloseBracket "]"
CloseBracket "]"
Ident "true"
Literal { kind: HexString } "<686931>"
Ident "null"
Literal { kind: HexString } "<686932>"
Ident "null"
OpenBracket "["
Literal { kind: Name } "/Dummy"
CloseBracket "]"
Literal { kind: LiteralString } "(hi3)"
OpenBracket "["
Literal { kind: LiteralString } "(hi4)"
Literal { kind: LiteralString } "(hi5)"
Ident "true"
Literal { kind: LiteralString } "(hi6)"
Ident "null"
Literal { kind: LiteralString } "(hi7)"
Literal { kind: Int } "12"
Literal { kind: LiteralString } "(hi8)"
CloseBracket "]"
Literal { kind: Real } "-1."
OpenDict "<<"
Literal { kind: Name } "/ABC"
Whitespace " "
Literal { kind: Real } "+.123"
Literal { kind: Name } "/DEF"
Whitespace " "
Literal { kind: Real } "+.0"
CloseDict ">>"
OpenBracket "["
CloseBracket "]"
Literal { kind: LiteralString } "(hi99)"
OpenBracket "["
CloseBracket "]"
Ident "null"
OpenBracket "["
CloseBracket "]"
OpenDict "<<"
Literal { kind: Name } "/DEF"
Whitespace " "
Ident "null"
CloseDict ">>"
Ident "true"
OpenDict "<<"
Literal { kind: Name } "/GHI"
Literal { kind: Name } "/JKL"
CloseDict ">>"
OpenBracket "["
OpenDict "<<"
Literal { kind: Name } "/MNO"
Whitespace " "
Literal { kind: Real } "+.0"
CloseDict ">>"
CloseBracket "]"
Literal { kind: HexString } "<686933>"
Literal { kind: Int } "1"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
OpenBracket "["
Literal { kind: Int } "1"
Whitespace " "
Literal { kind: Int } "2"
Whitespace " "
Literal { kind: Int } "3"
CloseBracket "]"
Literal { kind: Int } "6"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
Literal { kind: HexString } "<686934>"
Literal { kind: Int } "4"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
Literal { kind: LiteralString } "(hi9)"
Literal { kind: Int } "2"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
OpenDict "<<"
Literal { kind: Name } "/QRS"
Whitespace " "
Ident "true"
CloseDict ">>"
OpenBracket "["
Ident "true"
CloseBracket "]"
OpenDict "<<"
Literal { kind: Name } "/TUV"
Whitespace " "
Ident "true"
CloseDict ">>"
Literal { kind: HexString } "<686935>"
OpenDict "<<"
Literal { kind: Name } "/XYZ"
Whitespace " "
Ident "true"
CloseDict ">>"
Literal { kind: Int } "3"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
OpenDict "<<"
Literal { kind: Name } "/AAB"
Whitespace " "
Ident "true"
CloseDict ">>"
Literal { kind: LiteralString } "(hi10)"
OpenDict "<<"
Literal { kind: Name } "/AAC"
Whitespace " "
Ident "true"
CloseDict ">>"
Ident "null"
Literal { kind: HexString } "<686936>"
Ident "true"
Literal { kind: LiteralString } "(hi11)"
Literal { kind: HexString } "<686937>"
Literal { kind: LiteralString } "(hi12)"
Literal { kind: Real } "+.0"
Literal { kind: HexString } "<686938>"
CloseBracket "]"
Eol "\r\n"
Literal { kind: Name } "/Type"
Literal { kind: Name } "/Pages"
Literal { kind: Name } "/Count"
Whitespace " "
Literal { kind: Int } "1"
Literal { kind: Name } "/Kids"
OpenBracket "["
Literal { kind: Int } "4"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
Comment "%comment after indirect ref"
Eol "\r\n"
CloseBracket "]"
CloseDict ">>"
Ident "endobj"
Eol "\r\n"
Literal { kind: Int } "4"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "obj"
Eol "\r\n"
OpenDict "<<"
Literal { kind: Name } "/Type"
Literal { kind: Name } "/Page"
Literal { kind: Name } "/Parent"
Whitespace " "
Literal { kind: Int } "3"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
Literal { kind: Name } "/MediaBox"
OpenBracket "["
Comment "%comment after array start token"
Eol "\r\n"
Literal { kind: Int } "+0"
Whitespace " "
Literal { kind: Real } ".0"
Whitespace " "
Literal { kind: Int } "999"
Whitespace " "
Literal { kind: Real } "999."
CloseBracket "]"
Comment "%comment after array end token"
Eol "\r\n"
Literal { kind: Name } "/CropBox"
OpenBracket "["
Literal { kind: Int } "+0"
Whitespace " "
Literal { kind: Real } ".0"
Whitespace " "
Literal { kind: Int } "999"
Comment "%comment after an integer"
Eol "\r\n"
Literal { kind: Real } "999."
CloseBracket "]"
Literal { kind: Name } "/Contents"
OpenBracket "["
Literal { kind: Int } "5"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
CloseBracket "]"
Literal { kind: Name } "/UserUnit"
Whitespace " "
Literal { kind: Real } "+0.88"
Literal { kind: Name } "/Annots"
Whitespace " "
Ident "null"
Comment "%comment after null"
Eol "\r\n"
Literal { kind: Name } "/Resources"
OpenDict "<<"
Literal { kind: Name } "/Pattern"
OpenDict "<<"
CloseDict ">>"
Literal { kind: Name } "/ProcSet"
OpenBracket "["
Ident "null"
CloseBracket "]"
Literal { kind: Name } "/ExtGState"
OpenDict "<<"
Literal { kind: Name } "/"
Whitespace " "
Literal { kind: Int } "6"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
CloseDict ">>"
Literal { kind: Name } "/Font"
OpenDict "<<"
Literal { kind: Name } "/F1"
OpenDict "<<"
Literal { kind: Name } "/Type"
Literal { kind: Name } "/Font"
Literal { kind: Name } "/Subtype"
Literal { kind: Name } "/Type1"
Literal { kind: Name } "/BaseFont"
Literal { kind: Name } "/Times-Bold"
Literal { kind: Name } "/Encoding"
Literal { kind: Name } "/WinAnsiEncoding"
CloseDict ">>"
CloseDict ">>"
CloseDict ">>"
CloseDict ">>"
Eol "\r\n"
Ident "endobj"
Eol "\r\n"
Literal { kind: Int } "5"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "obj"
Eol "\r\n"
OpenDict "<<"
Literal { kind: Name } "/Length"
Whitespace " "
Literal { kind: Int } "809"
Whitespace "  "
CloseDict ">>"
Eol "\r\n"
Ident "stream"
RawStreamData "\r\n/BreakMyParser <</FakeBigDataArray[true[[[]]]true<686931>null<686932>null[/Dummy](hi3)[(hi4)(hi5)true(hi6)null(hi7)12(hi8)]-1.<</ABC +.123/DEF +.0>>[](hi99)[]null[]<</DEF null>>true<</GHI/JKL>>[<</MNO +.0>>]<686933>[1 2 3]<686934>(hi9)<</QRS true>>[true]<</TUV true>><686935><</XYZ true>><</AAB true>>(hi10)<</AAC true>>null<686936>true(hi11)<686937>(hi12)+.0<686938>]>> DP\r\n% Visible file marker\r\nBT/F1 30 Tf 0 Tr 1 0 0 1 10 950 Tm(PDF compacted syntax sequences according to ISO 32000)Tj 1 0 0 1 10 900 Tm \r\n(This file must NOT be resaved or modified by any tool!! v3.0) Tj ET\r\n% 3 colored vector graphic squares that are clipped\r\n/ gs q 40 w 75 75 400 400 re W S % stroke then clip a path with a wide black border\r\n1 0. .0 rg 75 75 200 200 re f 0 1 0 rg 275 75 200 200 re f .0 0 1 rg 275 275 200 200 re f Q\r\n"
Ident "endstream"
Eol "\r\n"
Ident "endobj"
Eol "\r\n"
Literal { kind: Int } "6"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "obj"
Eol "\r\n"
OpenDict "<<"
Literal { kind: Name } "/Type"
Literal { kind: Name } "/ExtGState"
Literal { kind: Name } "/ca"
Whitespace " "
Literal { kind: Real } "0.33"
Literal { kind: Name } "/CA"
Whitespace " "
Literal { kind: Real } "0.66"
Comment "%comment after a real"
Eol "\r\n"
CloseDict ">>"
Ident "endobj"
Eol "\r\n"
Literal { kind: Int } "7"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "obj"
Eol "\r\n"
OpenDict "<<"
Literal { kind: Name } "/Subject"
Literal { kind: LiteralString } "(Compacted Syntax v3.0)"
Comment "%comment after literal string end"
Eol "\r\n"
Literal { kind: Name } "/Title"
Literal { kind: HexString } "<436f6d7061637465642073796e746178>"
Comment "%comment after hex string end"
Eol "\r\n"
Literal { kind: Name } "/Keywords"
Literal { kind: LiteralString } "(PDF,Compacted,Syntax,ISO 32000-2:2020)"
Literal { kind: Name } "/CreationDate"
Literal { kind: LiteralString } "(D:20200317)"
Literal { kind: Name } "/Author"
Literal { kind: LiteralString } "(Peter Wyatt)"
Literal { kind: Name } "/Creator"
Literal { kind: HexString } "<48616e642d65646974>"
Literal { kind: Name } "/Producer"
Literal { kind: HexString } "<48616e642d65646974>"
CloseDict ">>"
Eol "\r\n"
Ident "endobj"
Eol "\r\n"
Ident "xref"
Eol "\r\n"
Literal { kind: Int } "0"
Whitespace " "
Literal { kind: Int } "8"
Eol "\r\n"
Literal { kind: Int } "0000000000"
Whitespace " "
Literal { kind: Int } "65535"
Whitespace " "
Ident "f"
Eol "\r\n"
Literal { kind: Int } "0000001228"
Whitespace " "
Literal { kind: Int } "00000"
Whitespace " "
Ident "n"
Eol "\r\n"
Literal { kind: Int } "0000001555"
Whitespace " "
Literal { kind: Int } "00000"
Whitespace " "
Ident "n"
Eol "\r\n"
Literal { kind: Int } "0000001572"
Whitespace " "
Literal { kind: Int } "00000"
Whitespace " "
Ident "n"
Eol "\r\n"
Literal { kind: Int } "0000002031"
Whitespace " "
Literal { kind: Int } "00000"
Whitespace " "
Ident "n"
Eol "\r\n"
Literal { kind: Int } "0000002428"
Whitespace " "
Literal { kind: Int } "00000"
Whitespace " "
Ident "n"
Eol "\r\n"
Literal { kind: Int } "0000003294"
Whitespace " "
Literal { kind: Int } "00000"
Whitespace " "
Ident "n"
Eol "\r\n"
Literal { kind: Int } "0000003369"
Whitespace " "
Literal { kind: Int } "00000"
Whitespace " "
Ident "n"
Eol "\r\n"
Ident "trailer"
Eol "\r\n"
OpenDict "<<"
Literal { kind: Name } "/Root"
Whitespace " "
Literal { kind: Int } "1"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
Literal { kind: Name } "/Info"
Comment "%comment after name"
Eol "\r\n"
Literal { kind: Int } "7"
Whitespace " "
Literal { kind: Int } "0"
Whitespace " "
Ident "R"
Literal { kind: Name } "/ID"
OpenBracket "["
Literal { kind: HexString } "<18D6B641245C03FABE67D93AD879D6EC>"
Literal { kind: HexString } "<6264992C92074533A46A019C7CF9BFB6>"
CloseBracket "]"
Literal { kind: Name } "/Size"
Whitespace " "
Literal { kind: Int } "8"
CloseDict ">>"
Eol "\r\n"
Ident "startxref"
Eol "\r\n"
Literal { kind: Int } "3679"
Whitespace "  "
Eol "\r\n"
Comment "%%EOF"
